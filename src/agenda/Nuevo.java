/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package agenda;

import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ceivg
 */
public class Nuevo extends javax.swing.JDialog {

    private String titulo;
    private Date inicio;
    private Date end;
    private String comentario;
    private String ubicacion;
    private ArrayList<Invitado> invitados;
    private boolean agreg;
    private static DefaultTableModel modlo;
    String data [][]={};
    String cabeza[]={"Nombre","Telefono"};
    private Integer key;
    int filas;
    private Integer index;
    /**
     * Creates new form Nuevo
     */
    public Nuevo(java.awt.Frame parent, boolean modal,boolean agreg){ 
            super(parent, modal);
            initComponents();
            setLocationRelativeTo(parent);
            this.setDatos();
            modlo=new DefaultTableModel(data,cabeza){
            @Override
            public boolean isCellEditable(int filas, int columnas) {
                if(columnas==4){
                    return true;
                }else{
                    return false;
                }   
            }
        };
        invitados=new ArrayList<Invitado>();
        jTable1.setModel(modlo);
        jTable1.setVisible(false);
        this.agreg=agreg;
        jButton4.setVisible(false);
        jButton5.setVisible(false);
    }
    
    public Nuevo(java.awt.Frame parent, boolean modal,boolean agreg,Evento w,Integer indes){
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        modlo=new DefaultTableModel(data,cabeza){
            @Override
            public boolean isCellEditable(int filas, int columnas) {
                if(columnas==4){
                    return true;
                }else{
                    return false;
                }   
            }
        };
        invitados=new ArrayList<>();
        jTable1.setModel(modlo);
        jTable1.setVisible(true);
        this.agreg=agreg;
        jButton4.setVisible(false);
        jButton5.setVisible(false);
        index=indes;
        this.setDatos(w);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jComboBox2 = new javax.swing.JComboBox<>();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField1.setText("Nombre de la actividad.");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jComboBox1.setEditable(true);
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12:00am", "12:15am", "12:30am", "12:45am", "1:00am", "1:15am", "1:30am", "1:45am", "2:00am", "2:15am", "2:30am", "2:45am", "3:00am", "3:15am", "3:30am", "3:45am", "4:00am", "4:15am", "4:30am", "4:45am", "5:00am", "5:15am", "5:30am", "5:45am", "6:00am", "6:15am", "6:30am", "6:45am", "7:00am", "7:15am", "7:30am", "7:45am", "8:00am", "8:15am", "8:30am", "8:45am", "9:00am", "9:15am", "9:30am", "9:45am", "10:00am", "10:15am", "10:30am", "10:45am", "11:00am", "11:15am", "11:30am", "11:45am", "12:00pm", "12:15pm", "12:30pm", "12:45pm", "1:00pm", "1:15pm", "1:30pm", "1:45pm", "2:00pm", "2:15pm", "2:30pm", "2:45pm", "3:00pm", "3:15pm", "3:30pm", "3:45pm", "4:00pm", "4:15pm", "4:30pm", "4:45pm", "5:00pm", "5:15pm", "5:30pm", "5:45pm", "6:00pm", "6:15pm", "6:30pm", "6:45pm", "7:00pm", "7:15pm", "7:30pm", "7:45pm", "8:00pm", "8:15pm", "8:30pm", "8:45pm", "9:00pm", "9:15pm", "9:30pm", "9:45pm", "10:00pm", "10:15am", "10:30am", "10:45am", "11:00am", "11:15am", "11:30am", "11:45am" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("a");

        jComboBox2.setEditable(true);
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12:00am", "12:15am", "12:30am", "12:45am", "1:00am", "1:15am", "1:30am", "1:45am", "2:00am", "2:15am", "2:30am", "2:45am", "3:00am", "3:15am", "3:30am", "3:45am", "4:00am", "4:15am", "4:30am", "4:45am", "5:00am", "5:15am", "5:30am", "5:45am", "6:00am", "6:15am", "6:30am", "6:45am", "7:00am", "7:15am", "7:30am", "7:45am", "8:00am", "8:15am", "8:30am", "8:45am", "9:00am", "9:15am", "9:30am", "9:45am", "10:00am", "10:15am", "10:30am", "10:45am", "11:00am", "11:15am", "11:30am", "11:45am", "12:00pm", "12:15pm", "12:30pm", "12:45pm", "1:00pm", "1:15pm", "1:30pm", "1:45pm", "2:00pm", "2:15pm", "2:30pm", "2:45pm", "3:00pm", "3:15pm", "3:30pm", "3:45pm", "4:00pm", "4:15pm", "4:30pm", "4:45pm", "5:00pm", "5:15pm", "5:30pm", "5:45pm", "6:00pm", "6:15pm", "6:30pm", "6:45pm", "7:00pm", "7:15pm", "7:30pm", "7:45pm", "8:00pm", "8:15pm", "8:30pm", "8:45pm", "9:00pm", "9:15pm", "9:30pm", "9:45pm", "10:00pm", "10:15am", "10:30am", "10:45am", "11:00am", "11:15am", "11:30am", "11:45am" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Todo el dia");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Ubicación:");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Invitados:");

        jLabel4.setText("Nombre:");

        txt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Telefono:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel6.setText("Notas:");

        jButton1.setText("Añadir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Aceptar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cancelar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel7.setText("Detalles del evento:");

        jLabel8.setText("Invitados:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "Telefono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jButton4.setText("Actualizar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Eliminar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel7)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jTextField2))
                                .addComponent(jLabel6)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel1)
                                    .addGap(6, 6, 6)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jSeparator1))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton1))
                                    .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1))
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox1)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton5))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton3)))
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
       
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
       if(jCheckBox1.isSelected()){
           jComboBox1.setSelectedItem("12:00am");
           jComboBox2.setSelectedItem("11:59pm");
           jComboBox1.setVisible(false);
           jComboBox2.setVisible(false);
       }else{
           jComboBox1.setVisible(true);
           jComboBox2.setVisible(true);
       }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void txt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       this.processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       String nombre=txt1.getText();
       String telefono=txt2.getText();
       Invitado invit = new Invitado(nombre,telefono);
       invitados.add(invit);
       String datos[]={nombre,telefono};
        modlo.addRow(datos);
        jTable1.setVisible(true);
        txt1.setText("");
        txt2.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private Integer searchUse(Date i,Date f){
        int j=0;
        while(j<Jagenda.getEventos().size()){
            Boolean di=Jagenda.getEventos().get(j).getInicio().before(i);
            Boolean ai=Jagenda.getEventos().get(j).getEnd().after(i);
            Boolean df=Jagenda.getEventos().get(j).getInicio().before(f);
            Boolean af=Jagenda.getEventos().get(j).getEnd().after(f);
            if((ai&&di)||(df&&af)||(ai&&df)){
                return 1;
            }
            j++;
        }
        return 0;
    }
    
    private Integer evaluate(Date i,Date f){
        Integer resultado=1;
        if(i.after(f)){
            return 0;
        }else if(searchUse(i,f)==1){
            return 2;
        }else if(i.compareTo(f)==0){
            return 3;
        }
        return resultado;
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        inicio=jDateChooser1.getDate();
        end=jDateChooser2.getDate();
        Integer keye=0;
        if(min(jComboBox2)>59){
            JOptionPane.showMessageDialog(this, "Hora final invalida","Hora invalida",JOptionPane.ERROR_MESSAGE);
            keye++;
        }else if(hour(jComboBox2)>12){
            JOptionPane.showMessageDialog(this, "Favor de usar el formato de 12 horas","Fecha invalida",JOptionPane.ERROR_MESSAGE);
            keye++;
        }else if(min(jComboBox1)>59){
            JOptionPane.showMessageDialog(this, "Hora de inicio invalida","Hora invalida",JOptionPane.ERROR_MESSAGE);
            keye++;
        }else if(hour(jComboBox1)>12){
            JOptionPane.showMessageDialog(this, "Favor de usar el formato de 12 horas","Fecha invalida",JOptionPane.ERROR_MESSAGE);
            keye++;
        }else if(keye==0){
        this.definirHora();
        if(evaluate(inicio,end)==0){
            JOptionPane.showMessageDialog(this, "El evento no puede terminar antes de que inicie","Fecha invalida",JOptionPane.ERROR_MESSAGE);
        }else if(evaluate(inicio,end)==2){
            JOptionPane.showMessageDialog(this, "Ya existe un evento en esa fecha","Fecha invalida",JOptionPane.ERROR_MESSAGE);
        }else if(evaluate(inicio,end)==3){
            JOptionPane.showMessageDialog(this, "La duracion del evento es nula","Fecha invalida",JOptionPane.ERROR_MESSAGE);
        }else{
        if(agreg==false){
            titulo=jTextField1.getText();
            inicio=jDateChooser1.getDate();
            end=jDateChooser2.getDate();
        this.definirHora();
        comentario=jTextArea1.getText();
        if(comentario.isEmpty()){
            comentario=" ";
        }
        ubicacion=jTextField2.getText();
        if(ubicacion.isEmpty()){
            ubicacion=" ";
        }
        Evento nuew = new Evento(titulo,inicio,end,comentario,ubicacion,invitados);
        Jagenda.ModEvento(nuew, index);
        this.processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        }else{
            titulo=jTextField1.getText();
        if(titulo.matches("Nombre de la actividad.")){
            Integer rep=Jagenda.getN();
            titulo="Sin titulo_"+rep.toString();
            rep++;
            Jagenda.setN(rep);
        }
        inicio=jDateChooser1.getDate();
        end=jDateChooser2.getDate();
        this.definirHora();
        comentario=jTextArea1.getText();
        if(comentario.isEmpty()){
            comentario=" ";
        }
        ubicacion=jTextField2.getText();
        if(ubicacion.isEmpty()){
            ubicacion=" ";
        }
        Evento nuew = new Evento(titulo,inicio,end,comentario,ubicacion,invitados);
        Jagenda.AñadirEvento(nuew);
        this.processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        }
        }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        modlo.removeRow(key);
        jButton4.setVisible(false);
        jButton5.setVisible(false);
        invitados.remove(key.intValue());
        txt1.setText("");
        txt2.setText("");
        ArrayList<Invitado>aux=new ArrayList<Invitado>();
        for(int i=0; i<invitados.size(); i++){
            if(i!=filas){
                aux.add(invitados.get(i));
            }
        }
        invitados.clear();
        invitados.addAll(aux);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        jButton4.setVisible(true);
        jButton5.setVisible(true);
        key=jTable1.getSelectedRow();
        txt1.setText(jTable1.getValueAt(key, 0).toString());
        txt2.setText(jTable1.getValueAt(key, 1).toString());
        filas=key;
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String [] info=new String [2];
        info[0]=txt1.getText();
        info[1]=txt2.getText();
        for(int i=0; i<modlo.getColumnCount(); i++){
            modlo.setValueAt(info[i], filas, i);
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    public Date a;
    
    public void setDatos(){
        a=Jagenda.geta();
        jDateChooser1.setDate(a);
        jDateChooser2.setDate(a);
    }
    public void setDatos(Evento w){
        jDateChooser1.setDate(w.getInicio());
        jDateChooser2.setDate(w.getEnd());
        jTextField2.setText(w.getUbicacion());
        jTextField1.setText(w.getTitulo());
        jComboBox1.setSelectedItem(w.Shorai());
        jComboBox2.setSelectedItem(w.Shoraf());
        jTextArea1.setText(w.getComentario());
        Integer k=0;
        Integer j=w.getInvitados().size();
        System.out.println(w.getInvitados().size());
        while(k<j){
            System.out.println(w.getInvitados().get(k).toString());
            Invitado g = new Invitado(w.getInvitados().get(k).getNombre(),w.getInvitados().get(k).getTelefono());
            System.out.println(g.toString());
            addinvit(g);
            k++;
        }
        invitados.clear();
        invitados.addAll(w.getInvitados());
        
    }
    
    private void definirHora(){
        Calendar temp=Calendar.getInstance();
        Calendar temp1=Calendar.getInstance(); 
        temp.setTime(inicio);
        temp1.setTime(end);        
        temp.set(Calendar.HOUR,hour(jComboBox1));
        temp.set(Calendar.MINUTE,min(jComboBox1));
        temp.set(Calendar.AM_PM,time(jComboBox1));
        temp.set(Calendar.SECOND, 0);
        temp1.set(Calendar.HOUR,hour(jComboBox2));
        temp1.set(Calendar.MINUTE,min(jComboBox2));
        temp1.set(Calendar.AM_PM,time(jComboBox2));
        temp1.set(Calendar.SECOND, 0);
        inicio=temp.getTime();
        end=temp1.getTime();
    }
    
    private Integer min(JComboBox a){
       String b=a.getSelectedItem().toString();
       String c="";
       Character d;
       int temp=6;
       int i;
       int j;
       if(temp==b.length()){
        j=4;   
        i=2;
       }else{
       i=3;
       j=5;
       }
       Character e=':';
       while(i<j&&e.compareTo(b.charAt(i))!=0){
           d=b.charAt(i);
           c=c+d;
           i++;
       }
       Integer resultado=Integer.valueOf(c);
       
       return resultado;
    }
    private Integer hour(JComboBox a){
       String b=a.getSelectedItem().toString();
       String c="";
       Character d;
       Character e=':';
       int i=0;
       
       while(i<2&&e.compareTo(b.charAt(i))!=0){
           d=b.charAt(i);
           c=c+d;
           i++;
       }
       Integer resultado=Integer.valueOf(c);
       if(resultado==12){
           resultado=0;
       }
       return resultado;
    }
    
    private void addinvit(Invitado g){
        String s=g.getNombre();
        String c=g.getTelefono();
        String datas[]={s,c};
        System.out.println(s+c+"++++++");
        modlo.addRow(datas);
        jTable1.setVisible(true);
    }
   
    private Integer time(JComboBox a){
        String b=a.getSelectedItem().toString();
        String c="";
        Character d;
        int i=b.length()-2;
        while(i<b.length()){
            d=b.charAt(i);
            c=c+d;
            i++;
        }
        Integer resultado=-1;
        String x="am";
        String y="pm";
        if(c.equalsIgnoreCase(x)){
            resultado=0;
        }else if(c.equalsIgnoreCase(y)){
            resultado=1;   
        }
        return resultado;
    }
    

    /**
     * @param args the command line arguments
     */



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField txt1;
    private javax.swing.JTextField txt2;
    // End of variables declaration//GEN-END:variables
}
